{
  "objects": [
    {
      "id": "ActivityId_G8muo",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Save Users to S3",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "EmrActivity",
      "step": [
        "s3://us-east-1.elasticmapreduce/libs/script-runner/script-runner.jar,s3://us-east-1.elasticmapreduce/libs/pig/pig-script,--base-path,s3://us-east-1.elasticmapreduce/libs/pig/,--install-pig,--pig-versions,latest",
        "s3://us-east-1.elasticmapreduce/libs/script-runner/script-runner.jar,s3://us-east-1.elasticmapreduce/libs/pig/pig-script,--base-path,s3://us-east-1.elasticmapreduce/libs/pig/,--pig-versions,latest,--run-pig-script,--args,-f,s3://data-engineering-team-bucket/pig/scripts/accounts/usercreateupdate.amazon.pig,-p,PARALLEL=10,-p,INPUT=s3://data-engineering-team-bucket/account_identity_logs/year=#{format(minusDays(@scheduledStartTime,1),'YYYY')}/month=#{format(minusDays(@scheduledStartTime,1),'MM')}/day=#{format(minusDays(@scheduledStartTime,1),'dd')}/*,-p,OUTPUT=s3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/identity"
      ]
    },
    {
      "id": "ActivityId_Xib4R",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Process demographics info",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "dependsOn": {
	"ref": "ActivityId_G8muo"
      },
      "type": "EmrActivity",
      "step": [
        "s3://us-east-1.elasticmapreduce/libs/script-runner/script-runner.jar,s3://us-east-1.elasticmapreduce/libs/pig/pig-script,--base-path,s3://us-east-1.elasticmapreduce/libs/pig/,--pig-versions,latest,--run-pig-script,--args,-f,s3://data-engineering-team-bucket/pig/scripts/accounts/demographics.amazon.pig,-p,INPUT=s3://data-engineering-team-bucket/account_identity_logs/year=#{format(minusDays(@scheduledStartTime,1),'YYYY')}/month=#{format(minusDays(@scheduledStartTime,1),'MM')}/day=#{format(minusDays(@scheduledStartTime,1),'dd')}/*,-p,OUTPUT=s3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/demographics"
      ]
    },
    {
      "id": "ActivityId_ioRn5",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Load demographics information",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "dependsOn": {
	"ref": "ActivityId_Xib4R"
      },
      "type": "SqlActivity",
      "script": "CREATE TABLE demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')}(accountid char(36),tstamp timestamp, email VARCHAR(255), country CHAR(2));COPY demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} from 's3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/demographics' CREDENTIALS 'aws_access_key_id=AKIAJWZPAGLR6TV7N7KA;aws_secret_access_key=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' delimiter '\t' TRUNCATECOLUMNS TIMEFORMAT 'epochmillisecs' MAXERROR 100 EMPTYASNULL BLANKSASNULL;UPDATE demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} SET country='' WHERE country IS NULL;UPDATE demographics SET lastupdate=ai.tstamp, googleemail=ai.email, country=ai.country FROM demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} AS ai WHERE demographics.accountid IN (SELECT accountid FROM demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')}) AND demographics.accountid = ai.accountid;INSERT INTO demographics (accountid, lastupdate, googleemail, country) SELECT accountid, tstamp, email, country FROM demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} WHERE accountid NOT IN (SELECT accountid FROM demographics);DROP TABLE demographics_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')};",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActivityId_dhgm0",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Create temporary tables",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "script": "CREATE TABLE mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')}(obsoleteaccountid char(36), activeaccountid char(36));CREATE TABLE updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')}(installationid varchar(60),accountid char(36),androidid varchar(32),anid2 char(44),channel varchar(255),country char(2),model varchar(100),duid varchar(150),facebookappuserid char(152),flavour varchar(10),idfa char(36),imei varchar(20),imsi varchar(20),language varchar(20),osname varchar(20),osversion varchar(20),platform varchar(20),appversion  varchar(10),creationdate timestamp,lastmodifieddate timestamp,newsfeedenabled boolean);",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActivityId_o35km",
      "name": "Generate merged update list",
      "type": "ShellCommandActivity",
      "command": "java -Dlog4j.configurationFile=/home/ec2-user/account-merge.xml -Xmx512m -cp /home/ec2-user/account-merger-1.0-SNAPSHOT-jar-with-dependencies.jar com.shazam.dataengineering.Merger /home/ec2-user/credentials.json #{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')} /home/ec2-user/merged-users && s3cmd --config /home/ec2-user/.s3cfg put /home/ec2-user/merged-users s3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/mergedaccounts",
      "workerGroup": "amp_publisher",
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      }
    },
    {
      "id": "ActivityId_QxSso",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Save Merged Users to Redshift",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "script": "COPY mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} from 's3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/mergedaccounts' CREDENTIALS 'aws_access_key_id=AKIAJWZPAGLR6TV7N7KA;aws_secret_access_key=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' delimiter '\t' TRUNCATECOLUMNS MAXERROR 100 EMPTYASNULL BLANKSASNULL;\t",
      "dependsOn": [
      {
        "ref": "ActivityId_o35km"
      },
      {
        "ref": "ActivityId_dhgm0"
      }
      ],
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActivityId_ihf02",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Update Account IDs from merging on accounts",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "dependsOn": [
      {
        "ref": "ActivityId_QxSso"
      },
      {
	"ref": "ActivityId_jLXyM"
      }
      ],
      "script": "UPDATE accounts SET accountid = m.activeaccountid FROM mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} m WHERE accounts.accountid = m.obsoleteaccountid;",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActivityId_ihf03",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Update Account IDs from merging on demographics",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "dependsOn": [
      {
        "ref": "ActivityId_QxSso"
      },
      {
        "ref": "ActivityId_jLXyM"
      }
      ],
      "script": "UPDATE demographics SET accountid = m.activeaccountid FROM mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} m WHERE demographics.accountid = m.obsoleteaccountid AND m.activeaccountid NOT IN (SELECT d.accountid FROM mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} m LEFT JOIN demographics d ON m.activeaccountid = d.accountid WHERE d.accountid IS NOT NULL);DELETE FROM demographics WHERE accountid IN (SELECT d.accountid FROM mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} m LEFT JOIN demographics d ON m.obsoleteaccountid = d.accountid WHERE d.accountid IS NOT NULL);",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActivityId_ihf04",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Update Account IDs from merging on tracks",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "dependsOn": [
      {
        "ref": "ActivityId_QxSso"
      },
      {
        "ref": "ActivityId_jLXyM"
      }
      ],
      "script": "UPDATE tracks SET accountid = m.activeaccountid FROM mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} m WHERE tracks.accountid = m.obsoleteaccountid;",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "Default",
      "scheduleType": "CRON",
      "failureAndRerunMode": "CASCADE",
      "name": "Default",
      "role": "DataPipelineDefaultRole",
      "resourceRole": "aws-elasticbeanstalk-ec2-role"
    },
    {
      "terminateAfter": "5 Hours",
      "id": "EmrClusterId_WNtJU",
      "region": "us-east-1",
      "emrLogUri": "s3://data-engineering-team-bucket/emrlogs",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "keyPair": "dataengineeringkeypair",
      "coreInstanceType": "m1.large",
      "enableDebugging": "true",
      "name": "DefaultEmrCluster1",
      "coreInstanceCount": "2",
      "logUri": "s3://data-engineering-team-bucket/adptasklogs",
      "type": "EmrCluster"
    },
    {
      "id": "ActivityId_jLXyM",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Save Updated Users to Temp Redshift Table and Upsert accounts table",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "onFail": {
        "ref": "ActionId_ojf35"
      },
      "type": "SqlActivity",
      "script": "COPY updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} from 's3://data-engineering-team-bucket/production/accounts/#{format(minusDays(@scheduledStartTime,1),'YYYY-MM-dd')}/identity' CREDENTIALS 'aws_access_key_id=AKIAJWZPAGLR6TV7N7KA;aws_secret_access_key=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' delimiter '\t' TRUNCATECOLUMNS MAXERROR 100 timeformat 'epochmillisecs' EMPTYASNULL BLANKSASNULL;UPDATE accounts SET accountid = u.accountid, country = u.country, platform = u.platform, language = u.language, installationid = u.installationid, lastmodifieddate = u.lastmodifieddate, model = u.model, osname= u.osname, osversion = u.osversion, idfa = u.idfa, androidid = u.androidid, facebookappuserid = u.facebookappuserid, duid = u.duid, anid2 = u.anid2, imsi = u.imsi, imei = u.imei, appversion = u.appversion, flavour = u.flavour, newsfeedenabled = u.newsfeedenabled FROM updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} u WHERE accounts.installationid IN (SELECT installationid FROM updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')}) AND accounts.installationid = u.installationid;INSERT INTO accounts (installationid,accountid,androidid,anid2,channel,country,model,duid,facebookappuserid,flavour,idfa,imei,imsi,language,osname,osversion,platform,appversion,creationdate,lastmodifieddate,newsfeedenabled) SELECT installationid,accountid,androidid,anid2,channel,country,model,duid,facebookappuserid,flavour,idfa,imei,imsi,language,osname,osversion,platform,appversion,creationdate,lastmodifieddate,newsfeedenabled FROM updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')} u WHERE NOT EXISTS (SELECT installationid FROM accounts WHERE u.installationid = accounts.installationid);",
      "dependsOn": [
      {
	"ref": "ActivityId_dhgm0"
      },
      {
	"ref": "ActivityId_G8muo"
      }
      ],
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ActionId_ojf35",
      "message": "Pipeline Name: Accounts pipeline",
      "subject": "Data Pipeline Error",
      "name": "ETLFailureSNS",
      "topicArn": "arn:aws:sns:us-east-1:784428439351:data_pipeline__accounts_daily_update",
      "role": "DataPipelineDefaultRole",
      "type": "SnsAlarm"
    },
    {
      "id": "RedshiftDatabaseId_2Gb4o",
      "username": "awsdata",
      "name": "DefaultRedshiftDatabase1",
      "*password": "Itsallaboutthedata1",
      "type": "RedshiftDatabase",
      "clusterId": "audience-db-production"
    },
    {
      "id": "ActivityId_rahh0",
      "schedule": {
        "ref": "ScheduleId_uV2CM"
      },
      "name": "Teardown Temp Redshift Tables",
      "runsOn": {
        "ref": "EmrClusterId_WNtJU"
      },
      "type": "SqlActivity",
      "onFail": {
	"ref": "ActionId_ojf35"
      },
      "dependsOn": [
      {
        "ref": "ActivityId_QxSso"
      },
      {
        "ref": "ActivityId_ihf02"
      },
      {
        "ref": "ActivityId_ihf03"
      },
      {
        "ref": "ActivityId_ihf04"
      },
      {
	"ref": "ActivityId_jLXyM"
      }
      ],
      "script": "DROP TABLE mergedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')};DROP TABLE updatedaccounts_#{format(minusDays(@scheduledStartTime,1),'YYYY_MM_dd')};",
      "database": {
        "ref": "RedshiftDatabaseId_2Gb4o"
      }
    },
    {
      "id": "ScheduleId_uV2CM",
      "startDateTime": "2014-07-26T12:01:00",
      "name": "DefaultSchedule1",
      "type": "Schedule",
      "period": "1 Day"
    }
  ]
}
